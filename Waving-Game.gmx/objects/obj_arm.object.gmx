<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tempArm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = 45;
deltaspeed = 0;
deltadeltaspeed = 0;
state = 0;
grav = 0;
fallstate = 0;

counter = 0;
colstate = 0;
rand = 10+irandom(15);

/*switch(irandom(4)){
    case 0: colour = global.purple; break;
    case 1: colour = global.pink; break;
    case 2: colour = global.blue; break;
    case 3: colour = global.teal; break;
    case 4: colour = global.green; break;
}*/

colour = global.purple;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.gamestate != 2){

if (state == 0){
    
    if (global.btnUp ^^ global.btnDown){
            if (global.btnUp){
                if (deltaspeed &gt;= 0.2){
                    deltadeltaspeed -= 0.032;
                }
                else{
                    deltadeltaspeed -= 0.0225;
                }
        }
        else if (global.btnDown){
            if (deltaspeed &lt;= -0.2){
                deltadeltaspeed += 0.032;
            }
            else{
                deltadeltaspeed += 0.0225;
            }
        }
    
    }
    else{
        deltadeltaspeed = 0;
        if (abs(deltaspeed) &gt; 0.1){
            deltaspeed -= 0.1*deltaspeed;
        }
        else if (abs(deltaspeed) &lt; 1 &amp;&amp; abs(deltaspeed) &gt; 0){
            if (angle &gt;= 30 &amp;&amp; angle &lt;= 60){
                deltaspeed += random(0.01)-0.005;
            }
            //deltaspeed = 0;
        }
    
    }

    
    
    changer = 0.1*(0.05+((global.levelscore*(global.levelscore/(0.5*global.winthreshold)))+1)/global.winthreshold);
     if (changer &lt; 0){
        changer = 0;
     }else if (changer &gt; 0.1){
        changer = 0.175;
     }
     deltaspeed += sign(deltaspeed)*changer;
     
     deltaspeed += deltadeltaspeed;
     
     deltaspeed -= (deltaspeed/25);
     
     if (abs(deltaspeed) &gt; 2){
        deltaspeed = 2*sign(deltaspeed);
    }     

    if (angle &lt;= 90 &amp;&amp; angle &gt; 0){
        angle += deltaspeed;
    }
    else{
        global.gamestate = 1;
        state = 1;
    }
    
    //SCORE
    if (angle &lt; 90-(0.5*(global.range)) &amp;&amp; angle &gt; (0.5*global.range)){
    
        if (abs(deltaspeed) &gt; 0.2){
            if (abs(deltadeltaspeed) &gt; 0.325){
                global.levelscore++;
                global.winning = 1;
            }
            else{
                global.winning = 0;
            }
        }
        else{
                global.winning = 0;
        }
        }
        else{
            global.levelscore-=2;
            global.winning = -1;
    }
    
    
     
}
else if (state == 1){
    if (fallstate == 0){
        deltadeltaspeed -= 0.1;
        grav += -1;
        if (y &lt;= 0){
            fallstate = 1;
        }
    }
    else{
        if (grav &lt; 0){
            grav = 0;
        }
        grav += 1;
    }
    y+= grav;
    
    
    if (y &gt; room_height+1000){
        global.gamestate = 2;
        
        with(obj_levelmanager){
            instance_destroy();
        }
        with(obj_crowdmember){
            instance_destroy();
        }
        instance_create(x, y, obj_gamegenerator);
        instance_destroy();
    }
    
    deltaspeed += deltadeltaspeed;
    angle += deltaspeed;
}

image_angle = angle;

}

/*if (counter%rand == 0){
    if (colstate &lt; 6){
        colstate++;
    }
    else{
        colstate = 0;
    }
}

counter++;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*switch (colstate){
    case 0: colour = (global.purple); break;
    case 1: colour = (global.pink); break;
    case 2: colour = (global.blue); break;
    case 3: colour = (global.teal); break;
    case 4: colour = (global.green); break;
    case 5: colour = (global.red); break;
    case 6: colour = (global.yellow); break;
}*/

draw_sprite_ext(spr_tempArm, 0, x, y, 1, 1, angle, colour, 1);
//draw_self();
//DEBUG
/*draw_set_font(global.Font0);
draw_set_colour(global.red);
draw_text(room_width/2, (room_height/5)-10, deltadeltaspeed);
draw_text(room_width/2, room_height/5, deltaspeed);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
